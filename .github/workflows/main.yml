name: Build and Deploy Spring Boot Docker App

on:
  push:
    branches:
      - main  # main 브랜치에 푸시할 때 실행됨
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest  # GitHub Action은 기본적으로 Ubuntu 환경에서 실행됨

    steps:
    # 1. Check out the repository
    - name: Checkout repository
      uses: actions/checkout@v2

    # 2. Set up JDK (Java 17 설치)
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adoptopenjdk'

    # 3. Gradle 빌드
    - name: Build with Gradle
      run: ./gradlew build --no-daemon

    # 4. Docker 빌드
    - name: Build Docker image
      run: docker build -t your-dockerhub-username/your-image-name:${{ github.sha }} .

    # 5. Docker Hub 로그인
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 6. Docker 이미지 푸시
    - name: Push Docker image
      run: docker push your-dockerhub-username/your-image-name:${{ github.sha }}

    # 7. Docker 이미지를 실행하기 위한 서버에 배포 (원하는 경우)
    # 예시로 EC2 인스턴스에서 실행한다고 가정
    - name: Deploy Docker container on EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_SSH_KEY }} ec2-user@your-ec2-ip "
        docker pull your-dockerhub-username/your-image-name:${{ github.sha }} &&
        docker run -d -p 8080:8080 your-dockerhub-username/your-image-name:${{ github.sha }}"
      env:
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

